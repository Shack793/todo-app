## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Todo Management'
description: |-

  APIs for managing todos
endpoints:
  -
    httpMethods:
      - GET
    uri: api/todos
    metadata:
      groupName: 'Todo Management'
      groupDescription: |-

        APIs for managing todos
      subgroup: ''
      subgroupDescription: ''
      title: 'List all todos'
      description: 'Get a list of todos with optional filtering, sorting, and searching capabilities.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter todos by status (not_started/in_progress/completed).'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search todos by title or details.'
        required: false
        example: 'important task'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Field to sort by (title/details/status/created_at/updated_at). Default: created_at.'
        required: false
        example: title
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_order:
        name: sort_order
        description: 'Sort direction (asc/desc). Default: asc.'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page. Default: 10.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: completed
      search: 'important task'
      sort_by: title
      sort_order: desc
      per_page: 15
    bodyParameters:
      status:
        name: status
        description: ''
        required: false
        example: not_started
        type: string
        enumValues:
          - not_started
          - in_progress
          - completed
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_by:
        name: sort_by
        description: ''
        required: false
        example: details
        type: string
        enumValues:
          - title
          - details
          - status
          - created_at
          - updated_at
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_order:
        name: sort_order
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: true
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ziaunnozpzom
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      status: not_started
      sort_by: details
      sort_order: asc
      search: ziaunnozpzom
      per_page: 12
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "current_page": 1,
             "data": [{
                 "id": 1,
                 "title": "Complete project documentation",
                 "details": "Write comprehensive API documentation",
                 "status": "in_progress",
                 "created_at": "2023-12-15T00:00:00.000000Z",
                 "updated_at": "2023-12-15T00:00:00.000000Z"
             }],
             "first_page_url": "http://localhost/api/todos?page=1",
             "from": 1,
             "last_page": 1,
             "last_page_url": "http://localhost/api/todos?page=1",
             "links": [],
             "next_page_url": null,
             "path": "http://localhost/api/todos",
             "per_page": 10,
             "prev_page_url": null,
             "to": 1,
             "total": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/todos
    metadata:
      groupName: 'Todo Management'
      groupDescription: |-

        APIs for managing todos
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new todo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the todo.'
        required: true
        example: 'Review pull request'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'optional The detailed description of the todo.'
        required: false
        example: 'Review and merge the new feature PR'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status of the todo (not_started/in_progress/completed).'
        required: true
        example: not_started
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Review pull request'
      details: 'Review and merge the new feature PR'
      status: not_started
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "id": 1,
             "title": "Review pull request",
             "details": "Review and merge the new feature PR",
             "status": "not_started",
             "created_at": "2023-12-15T00:00:00.000000Z",
             "updated_at": "2023-12-15T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "title": ["The title field is required."],
                 "status": ["The status field must be one of: not_started, in_progress, completed."]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/todos/{id}'
    metadata:
      groupName: 'Todo Management'
      groupDescription: |-

        APIs for managing todos
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a todo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'optional The title of the todo.'
        required: false
        example: 'Updated task title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'optional The detailed description of the todo.'
        required: false
        example: 'Updated task description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'optional The status of the todo (not_started/in_progress/completed).'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: 'Updated task title'
      details: 'Updated task description'
      status: completed
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "id": 1,
             "title": "Updated task title",
             "details": "Updated task description",
             "status": "completed",
             "created_at": "2023-12-15T00:00:00.000000Z",
             "updated_at": "2023-12-15T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/todos/{id}'
    metadata:
      groupName: 'Todo Management'
      groupDescription: |-

        APIs for managing todos
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a todo'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Todo deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
